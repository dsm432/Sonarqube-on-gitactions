name: Build Wex Components
on: workflow_dispatch
jobs:
  build_wex:
    runs-on: ubuntu-latest
    steps:
    # Checkout the Code
      - uses: actions/checkout@v3
    # Setup Java 11
      - name: Setup Java 11
        uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: "adopt"
          cache: "maven"
    # Build Java Package (Compile, Create Jar)
      - name: Build Java Package
        run: mvn -s config/settings.xml --batch-mode package
        env:
          NEXUS_USERNAME: ${{ secrets.WEX_NEXUS_USERNAME }}
          NEXUS_PASSWORD: ${{ secrets.WEX_NEXUS_PASSWORD }}
    # Run Static Code Analysis using SonarQube
      - name: SonarQube Analysis
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.organization=${{ secrets.SONAR_ORG }}
            -Dsonar.projectKey=${{ secrets.SONAR_PRJ_KEY }} 
            -Dsonar.java.binaries=target/
      # Check Code Quality with SQ Quality Gate
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # Setup Artifactory CLI
      - name: Setup Artifactory CLI
        uses: jfrog/setup-jfrog-cli@v2
        env:
          # JFrog platform url (for example: https://acme.jfrog.io)
          JF_URL: ${{ secrets.JF_URL }}
          JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}
      # Upload Artifacts to Artifactory
      - name: Upload Artifacts
        run: |
          jf rt u "target/(*.jar)" wex-example-rest/{1} --recursive=false
          jf rt u "target/(*.wex)" wex-example-rest/{1} --recursive=false